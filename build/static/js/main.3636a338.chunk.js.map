{"version":3,"sources":["component/Login/LoginForm.js","component/Login/Login.js","component/Login/LogOut.js","component/Home/Home.js","component/Blogs/Blogs.js","component/Blogs/BlogsDetails.js","component/Users/Users.js","App.js","reportWebVitals.js","index.js"],"names":["patterEmail","LoginForm","props","resetForm","formRef","current","resetValidationState","handleChange","target","value","name","setState","match","fetching","fetch","then","res","json","result","userData","find","email","toLowerCase","password","username","error","handleSubmit","e","formData","inputs","preventDefault","localStorage","setItem","history","push","pathname","state","handleErrorSubmit","errorInputs","console","React","createRef","this","ref","onSubmit","onErrorSubmit","FormGroup","Form","Label","id","required","pattern","validator","errorMessage","onChange","Text","className","readOnly","Row","Spinner","animation","variant","Button","type","Component","Login","useHistory","Container","Col","md","Card","Body","style","float","marginRight","location","PATHS","HOME","onClick","removeItem","LOGIN","Home","marginTop","textAlign","LogOut","margin","to","cardStyle","cursor","height","width","overflow","textOverflow","boxShadow","Blogs","useState","blogsList","setBlogsList","userList","setUserList","filterValue","setFilterValue","useEffect","a","log","fetchData","htmlFor","InputGroup","FormControl","placeholder","aria-label","aria-describedby","filter","title","userId","includes","map","item","i","BLOGS","blog","Title","body","length","BlogsDetails","Jumbotron","Users","city","address","companyName","company","website","Subtitle","Link","href","b","DASHBOARD","USERS","BLOGS_ID","App","exact","path","component","login","home","users","blogs","blogsDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGMA,EAAc,6CAoGLC,E,kDAlGX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAUVC,UAAY,WACM,EAAKC,QAAQC,QACnBC,sBAAqB,IAbf,EAelBC,aAAe,YAA6B,IAAD,MAA1BC,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC5B,EAAKC,UAAL,mBACKD,EAAOD,GADZ,yBAEuB,UAATC,GAAoB,MAFlC,IAIID,EAAMG,MAAMZ,KACZ,EAAKW,SAAS,CACVE,UAAU,IAEdC,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAEC,IAAMC,EAAWD,EAAOE,MAAK,qBAAEC,MAAiBC,gBAAkBb,EAAMa,iBACxEH,GAAY,EAAKhB,YACjB,EAAKQ,SAAS,CACVE,UAAU,EACVK,SACAK,SAAUJ,EAAWA,EAASK,SAAW,UAGjD,SAACC,GACG,EAAKd,SAAS,CACVE,UAAU,EACVU,SAAU,KACVE,eAxCN,EA+ClBC,aAAe,SAACC,EAAGC,EAAUC,GACzBF,EAAEG,iBACFC,aAAaC,QAAQ,WAAYJ,GACjC,EAAK1B,MAAM+B,QAAQC,KAAK,CAACC,SAAU,QAC/BC,MAAO,CAAElB,OAAQ,EAAKkB,MAAMlB,WAnDlB,EAuDlBmB,kBAAoB,SAACV,EAAGC,EAAUU,GAC9BC,QAAQd,MAAMa,IAtDd,EAAKlC,QAAUoC,IAAMC,YACrB,EAAKL,MAAQ,CACTf,MAAO,GACPE,SAAU,GACVV,UAAU,EACVY,MAAO,KACPP,OAAQ,IARE,E,qDA2DR,IAAD,EAC+BwB,KAAKN,MAAlCf,EADF,EACEA,MAAOE,EADT,EACSA,SAAUV,EADnB,EACmBA,SACxB,OACI,eAAC,iBAAD,CAAgB8B,IAAKD,KAAKtC,QAASwC,SAAUF,KAAKhB,aAAcmB,cAAeH,KAAKL,kBAApF,UACI,eAACS,EAAA,EAAD,WACI,cAACC,EAAA,EAAKC,MAAN,oBACA,cAAC,YAAD,CAAWtC,KAAK,QAAQuC,GAAG,QAAQC,UAAQ,EAChCzC,MAAOY,EACP8B,QAASnD,EACToD,UAAW,kBAAoB,OAAb7B,GAClB8B,aAAc,CACTH,SAAU,uBACVC,QAAS,6BACTC,UAAW,oCAEhBE,SAAUZ,KAAKnC,eAE1B,cAACwC,EAAA,EAAKQ,KAAN,CAAWC,UAAU,aAArB,+DAKJ,eAACV,EAAA,EAAD,WACI,cAACC,EAAA,EAAKC,MAAN,uBACA,cAAC,YAAD,CAAWtC,KAAK,WAAWuC,GAAG,WAAWC,UAAQ,EACtCO,UAAQ,EACRhD,MAAOc,EACP+B,SAAUZ,KAAKnC,kBAG9B,eAACwC,EAAA,EAAKW,IAAN,WACK7C,GAAY,cAAC8C,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,aAC/ChD,GAAY,cAACiD,EAAA,EAAD,CAAQC,KAAK,SAASP,UAAU,eAAhC,6B,GA5FVQ,aCsBTC,G,MApBD,WACV,IAAMhC,EAAUiC,cACnB,OACI,qBAAKV,UAAU,mBAAf,SACI,cAACW,EAAA,EAAD,UACI,cAACT,EAAA,EAAD,CAAKF,UAAU,eAAf,SACI,cAACY,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,qBAAKb,UAAU,kBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,cAACc,EAAA,EAAKC,KAAN,UACI,cAAC,EAAD,CAAWtC,QAASA,oBCEtCgC,EAbD,WACV,IAAMhC,EAAUiC,cAKhB,OACI,sBAAKM,MAAO,CAACC,MAAO,QAASC,YAAa,QAA1C,UACKzC,EAAQ0C,SAASxC,WAAayC,EAAMC,MAAQ,cAACf,EAAA,EAAD,CAAQgB,QAAS,kBAAM7C,EAAQC,KAAK0C,EAAMC,OAAOhB,QAAQ,UAAzD,kBAC7C,cAACC,EAAA,EAAD,CAAQgB,QAPK,WACjB/C,aAAagD,WAAW,YACxB9C,EAAQC,KAAK0C,EAAMI,QAKgBnB,QAAQ,iBAAvC,wBCHGoB,EAPF,kBACT,sBAAKT,MAAO,CAACU,UAAW,KAAMC,UAAW,UAAzC,UACI,cAACC,EAAD,IACA,cAAC,IAAD,CAAMZ,MAAO,CAACa,OAAQ,SAAUC,GAAG,SAAnC,mBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,iDCFKC,EAAY,CACrBC,OAAQ,UACRC,OAAQ,QACRC,MAAO,QACPC,SAAU,SACVC,aAAc,UACdC,UAAW,8DAsDAC,EAnDD,WACV,IAAM7D,EAAUiC,cADA,EAEkB6B,mBAAS,IAF3B,mBAETC,EAFS,KAEEC,EAFF,OAGgBF,mBAAS,IAHzB,mBAGTG,EAHS,KAGCC,EAHD,OAIsBJ,mBAAS,IAJ/B,mBAITK,EAJS,KAIIC,EAJJ,KAqBhB,OAhBAC,qBAAW,YACQ,uCAAG,sBAAAC,EAAA,sEACRzF,MAAM,8CACPC,MAAK,SAAAC,GAAG,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAKC,UACjBF,MAAK,SAACG,GACF+E,EAAa/E,MACd,SAACO,GAAWc,QAAQiE,IAAI,CAAC/E,aALnB,uBAMRX,MAAM,8CACPC,MAAK,SAAAC,GAAG,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAKC,UACjBF,MAAK,SAACG,GACFiF,EAAYjF,MACb,SAACO,GAAWc,QAAQiE,IAAI,CAAC/E,aAVnB,iCAWP,GAXO,2CAAH,qDAafgF,KACD,IAEC,eAACtC,EAAA,EAAD,WACI,cAACiB,EAAD,IACA,sBAAKZ,MAAO,CAACU,UAAW,QAAxB,UACI,uBAAOwB,QAAQ,YAAf,oBACA,cAACC,EAAA,EAAD,CAAYnD,UAAU,OAAtB,SACI,cAACoD,EAAA,EAAD,CACIC,YAAY,uCACZC,aAAW,SACXC,mBAAiB,eACjBzD,SAAU,gBAAW7C,EAAX,EAAED,OAASC,MAAX,OAAuB4F,EAAe5F,WAI5D,eAACiD,EAAA,EAAD,kBACKsC,QADL,IACKA,OADL,EACKA,EAAWgB,QAAO,kBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,OAAT,OAAuBd,GAAea,EAAME,SAASf,KAAyB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAU9E,MAAK,gBAAEV,EAAF,EAAEA,KAAF,OAAc0F,GAAe1F,EAAKyG,SAASf,aAA1D,eAA0EnD,MAAOiE,KACrKE,KAAI,SAACC,EAAMC,GAAP,OACL,cAAClD,EAAA,EAAD,CAAaU,QAAS,kBAAM7C,EAAQC,KAAK,CAACC,SAAS,GAAD,OAAIyC,EAAM2C,MAAV,YAAmBF,EAAKpE,IAAMb,MAAO,CAAEoF,KAAMH,MAA/F,SACI,cAAC/C,EAAA,EAAD,CAAME,MAAOe,EAAb,SACI,eAACjB,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKmD,MAAN,UAAaJ,EAAKJ,QAClB,cAAC3C,EAAA,EAAKf,KAAN,UAAY8D,EAAKK,aAJnBJ,MAQS,KAAb,OAATtB,QAAS,IAATA,OAAA,EAAAA,EAAW2B,SAAgB,iD,QCzC7BC,EAfM,SAAC,GAAiC,IAAbJ,EAAY,EAA/B7C,SAAWvC,MAAQoF,KAChCvF,EAAUiC,cAIhB,OAHAoC,qBAAU,YACLkB,GAAQvF,EAAQC,KAAK0C,EAAM2C,UAG5B,eAACpD,EAAA,EAAD,WACI,cAAC,IAAD,CAAMmB,GAAIV,EAAM2C,MAAhB,qBACCC,GAAQ,eAACK,EAAA,EAAD,CAAWrD,MAAO,CAACU,UAAW,QAA9B,UACL,6BAAKsC,EAAKP,QACV,4BAAIO,EAAKE,cCgCVI,EA1CD,WAAO,IAAD,EACgB/B,mBAAS,IADzB,mBACTG,EADS,KACCC,EADD,OAEsBJ,mBAAS,IAF/B,mBAETK,EAFS,KAEIC,EAFJ,KAUhB,OAPAC,qBAAW,WACPxF,MAAM,8CACDC,MAAK,SAAAC,GAAG,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAKC,UACjBF,MAAK,SAACG,GACFiF,EAAYjF,MACb,SAACO,GAAWc,QAAQiE,IAAI,CAAC/E,eAClC,IAEC,eAAC0C,EAAA,EAAD,WACI,cAACiB,EAAD,IACA,uBAAOsB,QAAQ,YAAf,oBACA,cAACC,EAAA,EAAD,CAAYnD,UAAU,OAAtB,SACI,cAACoD,EAAA,EAAD,CACIC,YAAY,iBACZC,aAAW,WACXC,mBAAiB,eACjBzD,SAAU,gBAAW7C,EAAX,EAAED,OAASC,MAAX,OAAuB4F,EAAe5F,QAGxD,eAACiD,EAAA,EAAD,kBACKwC,QADL,IACKA,OADL,EACKA,EAAUc,QAAO,gBAAEtG,EAAF,EAAEA,KAAF,OAAc0F,GAAe1F,EAAKyG,SAASf,MAAegB,KAAI,WAAmFE,GAAnF,IAAE5G,EAAF,EAAEA,KAAMc,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,MAAiB0G,EAAnC,EAAyBC,QAAUD,KAAwBE,EAA3D,EAA0CC,QAAWxH,KAAoByH,EAAzE,EAAyEA,QAAzE,OAC5E,cAAC/D,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,CAAME,MAAOe,EAAb,SACI,eAACjB,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKmD,MAAN,UAAa/G,IACb,cAAC4D,EAAA,EAAK8D,SAAN,CAAe5E,UAAU,kBAAzB,SAA4ChC,IAC5C,cAAC8C,EAAA,EAAKf,KAAN,UAAYlC,IACZ,cAACiD,EAAA,EAAKf,KAAN,UAAYwE,IACZ,cAACzD,EAAA,EAAKf,KAAN,UAAY0E,IACZ,cAAC3D,EAAA,EAAK+D,KAAN,CAAW7H,OAAO,SAAS8H,KAAI,qBAAgBH,GAAWI,GAAC,EAA3D,SAA6DJ,UAR/Db,MAaQ,KAAb,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUyB,SAAgB,iDClC9B/C,EAAQ,CACjB4D,UAAW,IACX3D,KAAM,QACNG,MAAO,SACPyD,MAAO,SACPlB,MAAO,SACPmB,SAAU,cAcCC,EAZH,kBACR,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMjE,EAAM4D,UAAWM,UAAWC,IAC/C,cAAC,IAAD,CAAOF,KAAMjE,EAAMI,MAAO8D,UAAWC,IACrC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAMjE,EAAMC,KAAMiE,UAAWE,IAC1C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMjE,EAAM6D,MAAOK,UAAWG,IAC3C,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAMjE,EAAM2C,MAAOuB,UAAWI,IAC3C,cAAC,IAAD,CAAON,OAAK,EAACC,KAAMjE,EAAM8D,SAAUI,UAAWK,UCZ3CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvI,MAAK,YAAkD,IAA/CwI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3636a338.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {TextInput, ValidationForm} from 'react-bootstrap4-form-validation'\nimport {Button, Form, FormGroup, Spinner} from 'react-bootstrap'\nconst patterEmail = '[A-Za-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$'\nclass LoginForm extends Component {\n    constructor(props){\n        super(props)\n        this.formRef = React.createRef()\n        this.state = {\n            email: '',\n            password: '',\n            fetching: false,\n            error: null,\n            result: []\n        }\n    }\n    resetForm = () => {\n        let formRef = this.formRef.current;\n        formRef.resetValidationState(false)\n    }\n    handleChange = ({target:{value, name}}) => {\n        this.setState({\n            [name]: value,\n            password: name === 'email' && null,\n        })\n        if (value.match(patterEmail)) {\n            this.setState({\n                fetching: true\n            })\n            fetch('https://jsonplaceholder.typicode.com/users')\n                .then(res => res.json())\n                .then((result) => {\n\n                        const userData = result.find(({email}) => email.toLowerCase() === value.toLowerCase())\n                        userData && this.resetForm()\n                        this.setState({\n                            fetching: false,\n                            result,\n                            password: userData ? userData.username : null\n                        })\n                    },\n                    (error) => {\n                        this.setState({\n                            fetching: false,\n                            password: null,\n                            error\n                        })\n                    }\n                )\n        }\n    }\n\n    handleSubmit = (e, formData, inputs) => {\n        e.preventDefault();\n        localStorage.setItem('formData', formData)\n        this.props.history.push({pathname: '/home',\n            state: { result: this.state.result }\n        })\n    }\n\n    handleErrorSubmit = (e, formData, errorInputs) => {\n        console.error(errorInputs)\n    }\n\n    render() {\n        const {email, password, fetching} = this.state\n        return (\n            <ValidationForm ref={this.formRef} onSubmit={this.handleSubmit} onErrorSubmit={this.handleErrorSubmit}>\n                <FormGroup>\n                    <Form.Label>Email</Form.Label>\n                    <TextInput name=\"email\" id=\"email\" required\n                               value={email}\n                               pattern={patterEmail}\n                               validator={() => (password !== null)}\n                               errorMessage={{\n                                    required: \"Email id is required\",\n                                    pattern: \"Please enter a valid email\",\n                                    validator: \"Entered email id not in the list\"\n                                }}\n                               onChange={this.handleChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label>Password</Form.Label>\n                    <TextInput name=\"password\" id=\"password\" required\n                               readOnly\n                               value={password}\n                               onChange={this.handleChange}\n                    />\n                </FormGroup>\n                <Form.Row>\n                    {fetching && <Spinner animation=\"border\" variant=\"primary\" />}\n                    {!fetching && <Button type='submit' className=\"login-button\">Login</Button>}\n                </Form.Row>\n            </ValidationForm>\n        )\n    }\n}\n\nexport default LoginForm;\n","import React from 'react'\nimport {Col, Container, Row, Card} from 'react-bootstrap'\nimport LoginForm from './LoginForm'\nimport './Login.css'\nimport { useHistory } from 'react-router-dom'\n\nconst Login = () => {\n    const history = useHistory()\n return (\n     <div className=\"fixed-background\">\n         <Container>\n             <Row className=\"card-center \">\n                 <Col md={7}>\n                     <div className=\"card imageaside\">\n                         <div className=\"card-horizontal \">\n                             <Card.Body>\n                                 <LoginForm history={history} />\n                             </Card.Body>\n                         </div>\n                     </div>\n                 </Col>\n             </Row>\n         </Container>\n     </div>\n )\n}\nexport default Login","import React from 'react'\nimport {Button} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { PATHS } from '../../App'\n\nconst Login = () => {\n    const history = useHistory()\n    const handleLogOut = () => {\n        localStorage.removeItem('formData')\n        history.push(PATHS.LOGIN)\n    }\n    return (\n        <div style={{float: 'right', marginRight: '20px'}}>\n            {history.location.pathname !== PATHS.HOME && <Button onClick={() => history.push(PATHS.HOME)} variant=\"outline\" >Home</Button>}\n            <Button onClick={handleLogOut} variant=\"outline-danger\" >LogOut</Button>\n        </div>\n    )\n}\nexport default Login","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport LogOut from '../Login/LogOut'\n\nconst Home = () => (\n    <div style={{marginTop: '3%', textAlign: 'center'}}>\n        <LogOut />\n        <Link style={{margin: '0 2% '}} to=\"/users\">Users</Link>\n        <Link to=\"/blogs\">Blogs</Link>\n    </div>\n)\nexport default Home","import React, {useState, useEffect} from 'react'\nimport { Container, Card, Row, Col, InputGroup, FormControl } from 'react-bootstrap'\nimport { PATHS } from '../../App'\nimport { useHistory } from 'react-router-dom'\nimport LogOut from '../Login/LogOut'\n\nexport const cardStyle = {\n    cursor: 'pointer',\n    height: '16rem',\n    width: '20rem',\n    overflow: 'hidden',\n    textOverflow: 'ellipse',\n    boxShadow: '0 1px 2px 0 rgba(0,0,0,.15), 0 1px 3px 1px rgba(0,0,0,.15)'\n}\n\nconst Blogs = () => {\n    const history = useHistory()\n    const [blogsList, setBlogsList] = useState([])\n    const [userList, setUserList] = useState([])\n    const [filterValue, setFilterValue] = useState([])\n    useEffect (() => {\n        const fetchData = async() => {\n            await fetch('https://jsonplaceholder.typicode.com/posts')\n                .then(res => res?.json())\n                .then((result) =>\n                    {setBlogsList(result)},\n                    (error) => {console.log({error})})\n            await fetch('https://jsonplaceholder.typicode.com/users')\n                .then(res => res?.json())\n                .then((result) =>\n                    {setUserList(result)},\n                    (error) => {console.log({error})})\n            return true\n        }\n        fetchData()\n    }, [])\n    return(\n        <Container>\n            <LogOut />\n            <div style={{marginTop: '20px'}}>\n                <label htmlFor=\"basic-url\">Search</label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        placeholder=\"Search by author name and blog title\"\n                        aria-label=\"Search\"\n                        aria-describedby=\"basic-addon1\"\n                        onChange={({target: {value}}) => setFilterValue(value)}\n                    />\n                </InputGroup>\n            </div>\n            <Row>\n                {blogsList?.filter(({title, userId}) => (!filterValue || title.includes(filterValue ) || userList?.find(({name}) => (!filterValue || name.includes(filterValue)))?.id === userId))\n                    .map((item, i) =>\n                    <Col key={i} onClick={() => history.push({pathname:`${PATHS.BLOGS}/${item.id}`, state: { blog: item }})}>\n                        <Card style={cardStyle}>\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>{item.body}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>)}\n                {blogsList?.length === 0 && <div>No Data</div>}\n            </Row>\n        </Container>\n    )\n}\nexport default Blogs","import React, {useEffect} from 'react'\nimport { Container, Jumbotron } from 'react-bootstrap'\nimport { PATHS } from '../../App'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nconst BlogsDetails = ({location: {state: {blog}}}) => {\n    const history = useHistory()\n    useEffect(() => {\n        !blog && history.push(PATHS.BLOGS)\n    })\n    return(\n        <Container>\n            <Link to={PATHS.BLOGS}>Go Back</Link>\n            {blog && <Jumbotron style={{marginTop: '20px'}}>\n                <h1>{blog.title}</h1>\n                <p>{blog.body}</p>\n            </Jumbotron>}\n        </Container>\n    )\n}\nexport default BlogsDetails","import React, {useState, useEffect} from 'react'\nimport {Container, Card, Row, Col, FormControl, InputGroup} from 'react-bootstrap'\nimport { cardStyle } from '../Blogs/Blogs'\nimport LogOut from '../Login/LogOut'\n\nconst Users = () => {\n    const [userList, setUserList] = useState([])\n    const [filterValue, setFilterValue] = useState([])\n    useEffect (() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res?.json())\n            .then((result) =>\n                {setUserList(result)},\n                (error) => {console.log({error})})\n    }, [])\n    return(\n        <Container>\n            <LogOut />\n            <label htmlFor=\"basic-url\">Search</label>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                    placeholder=\"Search by name\"\n                    aria-label=\"Username\"\n                    aria-describedby=\"basic-addon1\"\n                    onChange={({target: {value}}) => setFilterValue(value)}\n                />\n            </InputGroup>\n            <Row >\n                {userList?.filter(({name}) => (!filterValue || name.includes(filterValue))).map(({name, username, email, address: {city}, company : {name: companyName}, website}, i) =>\n                    <Col key={i}>\n                        <Card style={cardStyle}>\n                            <Card.Body>\n                                <Card.Title>{name}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">{username}</Card.Subtitle>\n                                <Card.Text>{email}</Card.Text>\n                                <Card.Text>{city}</Card.Text>\n                                <Card.Text>{companyName}</Card.Text>\n                                <Card.Link target=\"_blank\" href={`http://www.${website}`} b>{website}</Card.Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                )}\n                {userList?.length === 0 && <div>No Data</div>}\n            </Row>\n        </Container>\n    )\n}\nexport default Users","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport login from './component/Login/Login'\nimport home from './component/Home/Home'\nimport blogs from './component/Blogs/Blogs'\nimport blogsDetails from './component/Blogs/BlogsDetails'\nimport users from './component/Users/Users'\n\nexport const PATHS = {\n    DASHBOARD: '/',\n    HOME: '/home',\n    LOGIN: '/Login',\n    USERS: '/users',\n    BLOGS: '/blogs',\n    BLOGS_ID: '/blogs/:id'\n};\nconst App = () => (\n    <Router>\n        <Switch>\n            <Route exact path={PATHS.DASHBOARD} component={login}/>\n            <Route path={PATHS.LOGIN} component={login}/>\n            <Route exact path={PATHS.HOME} component={home}/>\n            <Route exact path={PATHS.USERS} component={users}/>\n            <Route exact path={PATHS.BLOGS} component={blogs}/>\n            <Route exact path={PATHS.BLOGS_ID} component={blogsDetails}/>\n        </Switch>\n    </Router>\n)\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}